# Config file for https://github.com/FooSoft/homemaker

##################################################################################
# WINDOWS
##################################################################################

[tasks.totalcmd]
    cmds = [
        ["reg", "add", 'HKCU\Software\Ghisler\Total Commander', "/v", "IniFileName", "/d", '%LocalAppData%\totalcmd\wincmd.ini', "/f"],
        ["reg", "add", 'HKCU\Software\Ghisler\Total Commander', "/v", "FtpIniName",  "/d", '%LocalAppData%\totalcmd\wcx_ftp.ini', "/f"],
    ]
    links = [
        ["AppData/local/totalcmd/wincmd.ini", "totalcmd/wincmd.ini"],
        ["AppData/local/totalcmd/usercmd.ini", "totalcmd/usercmd.ini"],
        ["AppData/local/totalcmd/totalcommander.bar", "totalcmd/totalcommander.bar"],
    ]
    # File bug in homemaker: if file already exists then you get a prompt "clobber? Y/N". Choosing No overwrites the file anyway
    #templates = [
    #    ["AppData/local/totalcmd/wincmd_dirs.ini", "totalcmd/wincmd_dirs_template.ini"]
    #]

[tasks.console-z]
    links = [
        ["AppData/roaming/Console/console.xml", "console-z/console.xml"],
    ]

[tasks.eclipse]
    links = [
        [".eclipse", "eclipse"],
        [".vrapperrc", "rc-files/vrapperrc"]
    ]

[macros.powershell-check-modules]
    prefix = ["cmd", "/c", "powershell", "-NoProfile", "-Command", "Import-Module"]

[macros.powershell-install-module]
    prefix = ["cmd", "/c", "powershell", "-NoProfile", "-Command", "Install-Module"]

[tasks.powershell-modules]
    rejects = [
        ["@powershell-check-modules", "PSCX,Jump.Location,PSReadline"]
    ]
    # Install nuget provider for PowerShellGet and install favourite modules
    cmds = [
        ["cmd", "/c", "powershell", "-NoProfile", "-Command", "Install-PackageProvider", "-Name", "NuGet", "-MinimumVersion", "2.8.5.201"],
        ["cmd", "/c", "powershell", "-NoProfile", "-Command", "Set-PSRepository", "PSGallery", "-InstallationPolicy", "Trusted"],
        ["@powershell-install-module", "PSCX", "-AllowClobber"],
        ["@powershell-install-module", "ZLocation"],
        ["@powershell-install-module", "PSReadline"],
        ["@powershell-install-module", "Recycle"],
    ]

[tasks.powershell]
    deps = ["powershell-modules"]
    # Set execution policy in 64 and 32 bit modes
    cmds = [
        ["cmd", "/c", "powershell",                                          "-NoProfile", "-Command", "Set-ExecutionPolicy", "-Scope", "CurrentUser", "RemoteSigned"],
        ["cmd", "/c", "%windir%/syswow64/WindowsPowerShell/v1.0/powershell", "-NoProfile", "-Command", "Set-ExecutionPolicy", "-Scope", "CurrentUser", "RemoteSigned"],
    ]
    links = [
        ["Documents/WindowsPowerShell", "WindowsPowerShell"],
    ]

[tasks.visualstudio]
    # Make it so that double clicking on a TFS Pending Change item opens the diff viewer rather than the file
    cmds = [
        ["reg", "add", 'HKCU\Software\Microsoft\VisualStudio\14.0\TeamFoundation\SourceControl\Behavior', "/v", "DoubleClickOnChange", "/t", "REG_DWORD", "/d", "00000001", "/f"],
        ["reg", "add", 'HKCU\Software\Microsoft\VisualStudio\15.0\TeamFoundation\SourceControl\Behavior', "/v", "DoubleClickOnChange", "/t", "REG_DWORD", "/d", "00000001", "/f"]
    ]
    links = [
        [".vsvimrc", "rc-files/vsvimrc"],
    ]

[tasks.windows-tweaks]
    # (Try to) Disable those annoying freemium sideloading apps you get after each major update
    cmds = [
        ["reg", "add", 'HKCU\Software\Microsoft\Windows\CurrentVersion\ContentDeliveryManager', "/v", "SilentInstalledAppsEnabled", "/t", "REG_DWORD", "/d", "00000000", "/f"],
    ]

[macros.powershell-create-link-start-home]
    # Next parameter after macro is location of link file
    # Target path still needs to be specified to tell where to link to
    prefix = ["cmd", "/c", "powershell", "-NoProfile", "-Command", "${HM_SRC}/WindowsPowershell/Scripts/New-ShellLink.ps1",
                "-Force", "-LinkOutputPath"]
    suffix = ["-StartPath", "'%USERPROFILE%'"]

[macros.powershell-create-link]
    # Next parameter after macro is location of link file
    # Target path still needs to be specified to tell where to link to
    prefix = ["cmd", "/c", "powershell", "-NoProfile", "-Command", "${HM_SRC}/WindowsPowershell/Scripts/New-ShellLink.ps1",
                "-Force", "-LinkOutputPath"]

[tasks.windows-software]
    # TODO: see what https://gist.github.com/alimbada/449ddf65b4ef9752eff3 has to offer
    # Install software, pin some of them so software's auto-update mechanism doesn't conflict with chocolatey, create shortcuts
    cmds = [
        ["choco", "install", "-y", "${HM_SRC}/win-choco-packages.config"],

        ["choco", "pin", "add", "--name", "palemoon"],
        ["choco", "pin", "add", "--name", "notepadplusplus.install"],
        ["choco", "pin", "add", "--name", "adobereader"],

        # Make sure that Git uses GVim as editor, MSYS2 vim doesn't work properly in Console-Z. Setting this in the registry so that the git config remains platform indedendent.
        ["powershell", "-NoProfile", "-Command", "Set-ItemProperty", "-Path", 'HKCU:\Environment', "-Name", "GIT_EDITOR", "-Value", '"gvim.exe -f -i NONE"', "-Force"],

        ["powershell", "-NoProfile", "-Command", "Set-ItemProperty", "-Path", 'HKCU:\Environment', "-Name", "EDITOR", "-Value", "gvim.exe", "-Force"],

        ["@powershell-create-link-start-home",
            "'${HM_DEST}/AppData/Roaming/Microsoft/Windows/Start Menu/Programs/Console.lnk'",
            "-TargetPath", "C:/ProgramData/chocolatey/lib/ConsoleZ/tools/Console.exe"],

        ["@powershell-create-link-start-home",
            "'${HM_DEST}/AppData/Roaming/Microsoft/Windows/Start Menu/Programs/Command prompt console.lnk'",
            "-TargetPath", "C:/ProgramData/chocolatey/lib/ConsoleZ/tools/Console.exe", "-Arguments", "'-t Cmd'"],

        ["@powershell-create-link-start-home",
            "'${HM_DEST}/AppData/Roaming/Microsoft/Windows/Start Menu/Programs/Kitty.lnk'",
            "-TargetPath", "C:/ProgramData/chocolatey/lib/kitty/tools/kitty.exe"],

        ["@powershell-create-link-start-home",
            "'${HM_DEST}/AppData/Roaming/Microsoft/Windows/Start Menu/Programs/BareTail.lnk'",
            "-TargetPath", "C:/ProgramData/chocolatey/lib/baretail/tools/baretail.exe"],

        ["@powershell-create-link-start-home",
            "'${HM_DEST}/AppData/Roaming/Microsoft/Windows/Start Menu/Programs/LogExpert.lnk'",
            "-TargetPath", "c:/ProgramData/chocolatey/lib/logexpert/tools/LogExpert.exe"],

        ["@powershell-create-link",
            "'${HM_DEST}/AppData/Roaming/Microsoft/Windows/Start Menu/Programs/Calculator.lnk'",
            "-TargetPath", "shell:appsFolder\\Microsoft.WindowsCalculator_8wekyb3d8bbwe!App"],

        ["@powershell-create-link",
            "'${HM_DEST}/AppData/Roaming/Microsoft/Windows/Start Menu/Programs/Settings.lnk'",
            "-TargetPath", "shell:appsFolder\\windows.immersivecontrolpanel_cw5n1h2txyewy!microsoft.windows.immersivecontrolpanel"]
    ]

# Register programs which get installed somewhere in this script and which should start automatically.
[tasks.windows-startup]
    cmds = [
        ["@powershell-create-link-start-home",
            "'${HM_DEST}/AppData/Roaming/Microsoft/Windows/Start Menu/Programs/Startup/WinManagement.lnk'",
            "-TargetPath", "%DOTFILESPATH%/autohotkey/WinManagement.ahk"],

        ["@powershell-create-link-start-home",
            "'${HM_DEST}/AppData/Roaming/Microsoft/Windows/Start Menu/Programs/Startup/WinMaximizer.lnk'",
            "-TargetPath", "%DOTFILESPATH%/autohotkey/WinMaximizer.ahk"],
    ]

[tasks.windows-bin]
    links = [
        ["bin/lst2mlt.exe", "windows-bin/lst2mlt.exe"],
        ["bin/git-cola", "windows-bin/git-cola"]
    ]

##################################################################################
# LINUX
##################################################################################

[tasks.zsh]
    links = [
        [".zshrc", "zsh/zshrc"],
        [".zshenv", "zsh/zshenv"],
        [".zsh", "zsh"], # Organize zsh stuff somewhat similar to Vim folder
    ]

##################################################################################
# SHARED
##################################################################################

[tasks.shared-rc]
    links = [
        [".ackrc", "rc-files/ackrc"],
        [".bash_aliases", "rc-files/bash_aliases"],
        [".bashrc", "rc-files/bashrc"],
        [".config", "xdgconfighome"],
        [".git_global_ignore", "rc-files/git_global_ignore"],
        [".gitconfig", "rc-files/git_global_config"],
        [".lesskey", "rc-files/lesskey"],
        [".pentadactylrc", "rc-files/pentadactylrc"],
        [".themes", "gtk-themes"]
    ]
    #[".kdiff3rc"],
    # File bug in homemaker: if file already exists then you get a prompt "clobber? Y/N". Choosing No overwrites the file anyway
    #templates = [
    #    [".localgitconfig", "rc-files/git_local_config_template"]
    #]

[tasks.vim]
    links = [
        [".vimrc", "vim/main-vimrc"],
        [".vim", "vim"], # Actually a folder
    ]

##################################################################################
# BINDING ACTIONS
##################################################################################


[tasks.default]
    deps = ["vim", "shared-rc"]

[tasks.default__windows]
    deps = ["default__", "windows-bin", "eclipse", "powershell", "visualstudio", "totalcmd", "console-z", "windows-tweaks", "windows-software",
            "windows-startup"]

[tasks.default__linux]
    deps = ["vim", "shared-rc", "zsh"]
